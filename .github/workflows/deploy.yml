name: Deploy to AWS

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3

      - name: Get Secrets
        id: get-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            prod/totem/ECR
            ECR_URL, prod/totem/ECR

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_URL:$IMAGE_TAG -f /docker/node/Dockerfile .
          docker push $ECR_URL:$IMAGE_TAG
          echo "image=$ECR_URL:$IMAGE_TAG" >> $GITHUB_ENV
      # - name: Configure Kubernetes context
      #   run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      # - name: Kubernetes deployment
      #   run: |
      #     kubectl apply \
      #     -f k8s/namespace.yaml \
      #     -f k8s/totem-configmap.yaml \
      #     -f k8s/totem-postgres-secrets.yaml \
      #     -f k8s/totem-api-deploy.yaml \
      #     -f k8s/totem-api-svc.yaml \
      #     -f k8s/totem-hpa.yaml

